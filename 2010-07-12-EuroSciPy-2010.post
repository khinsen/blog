;;;;;
title: EuroSciPy 2010
tags: Programming, Science
date: 2010-07-12 09:43:12
format: html
;;;;;
This weekend I attended the <a href="http://www.euroscipy.org/conference/euroscipy2010">EuroSciPy 2010</a> conference in Paris, dedicated to scientific applications of the programming language Python. This was the third EuroSciPy conference, but the US-based SciPy conference has been a regular event for many years already, and recently SciPy India joined the crowd. It looks like Python is becoming ever more popular in scientific computing. Next year, EuroSciPy will take place in Paris again.<br><br>There were lots of interesting presentations and announcements, and the breaks provided a much appreciated opportunity for exchanges between the participants. I won't try to provide an exhaustive summary, but rather list my personal highlights. Obviously this choice reflects my personal interests more than the quality of the presentations, and I will even list things that were not presented but that I learned about from other participants during the breaks.<br><br><strong>Teaching</strong><br><br>The <a href="http://www.euroscipy.org/talk/876">opening keynote</a> was given by <a href="http://vefur.simula.no/~hpl/">Hans-Petter Langtangen,</a> who is best known for his books about Python for scientific computing. His <a href="http://www.amazon.com/Scientific-Programming-Computational-Science-Engineering/dp/3642024742/ref=sr_1_2?ie=UTF8&amp;s=books&amp;qid=1250102359&amp;sr=1-2">latest book</a> is a textbook for a course on scientific programming for beginning science students, and the first part of his keynote was about this same course that he is teaching at the University of Oslo. As others have noted as well, he observed that the students have no problem at all with picking up Python and using it productively in science. The difficulties with using Python are elsewhere: it is hard to convince the university professors that Python is a good choice of programming language for such a course!<br><br>Another important aspect of his presentation was the observation that teaching scientific programming to beginning science students provides more than just training in some useful technique. Converting equations into programs and running them also provides a much better insight into the structure and applicability of the equations. Computational science thus helps to better educate future scientists.<br><br><strong>Reproducible research</strong><br><br>The <a href="http://reproducibleresearch.net/index.php/Main_Page">reproducible research</a> movement has the goal of improving the standards in computational science. At the moment, it is almost always impossible to reproduce published computational results from the information provided by the authors. Making these results reproducible requires a careful recording of what was calculated using which version of which software running on which machine, and of course making this information available along with the publication.<br><br>At EuroSciPy, <a href="http://www.euroscipy.org/talk/1960">Andrew Davison</a> presented <a href="http://neuralensemble.org/trac/sumatra/">Sumatra</a>, a Python library for tracking this information (and more) for computational procedures written in Python. The library is in an early stage, with more functionality to come, but those interested in reproducible research should check it out now and contribute to its development.<br><br><a href="http://www.euroscipy.org/talk/2393">Jarrod Millman</a> addressed the same topic in his presentation of the plans for creating a Foundation for Mathematical and Scientific Computing, whose goal is to fund development of tools and techniques that improve computational science.<br><br><strong>NumPy and Python 3</strong><br><br>As a couple of active contributors to the NumPy project were attending the conference, I asked about the state of the porting effort to Python 3. The good news is that the port is done and will soon be released. Those who have been waiting for NumPy to be ported before starting to port their own libraries can go to work right now: check out the <a href="http://svn.scipy.org/svn/numpy/trunk/">NumPy Subversion repository</a>, install, and use!<br><br><strong>Useful maths libraries</strong><br><br>Three new maths libraries that were presented caught my attention: <a href="http://www.euroscipy.org/talk/2045">Sebastian Walter</a>'s talk about algorithmic differentiation contained demos of <a href="http://github.com/b45ch1/algopy">algopy</a>,  a rather complete library for algorithmic differentiation in Python. During the Lightning talks on the last day, two apparently similar libraries for working with uncertain numbers (numbers with error bars) were shown: <a href="http://packages.python.org/uncertainties/">uncertainties</a>, by Eric Lebigot, and upy, by Friedrich Romstedt. Both do error propagation and take correlations into account. Those of us working with experimental data or simulation results will appreciate this.<br><br>There was a lot more interesting stuff, of course, and I hope others will write more about it. I'll just point out that the slides for my own keynote about the future of Python in science are available <a href="http://dirac.cnrs-orleans.fr/plone/Members/hinsen/presentations/scientific-computing/EuroSciPy_2010_Keynote.pdf/view">from my Web site</a>. And of course express my thanks to the organizing committee who invested a lot of effort to make this conference a big success!<br><br>
